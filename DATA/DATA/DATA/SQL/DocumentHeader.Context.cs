//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATA.SQL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibertadSACabeceraFacturaEntities : DbContext
    {
        public LibertadSACabeceraFacturaEntities()
            : base("name=LibertadSACabeceraFacturaEntities")
        {
        }

        public LibertadSACabeceraFacturaEntities(string ConnectionString):base(ConnectionString) { }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int Insert_DocumentHeader(string stockSystem, string idMessage, string branchId, string trxId, string trxDateTime, string trxDocType, string clientDoc, string clientName, string clientAdress, string gUID)
        {
            var stockSystemParameter = stockSystem != null ?
                new ObjectParameter("StockSystem", stockSystem) :
                new ObjectParameter("StockSystem", typeof(string));
    
            var idMessageParameter = idMessage != null ?
                new ObjectParameter("IdMessage", idMessage) :
                new ObjectParameter("IdMessage", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var trxIdParameter = trxId != null ?
                new ObjectParameter("TrxId", trxId) :
                new ObjectParameter("TrxId", typeof(string));
    
            var trxDateTimeParameter = trxDateTime != null ?
                new ObjectParameter("TrxDateTime", trxDateTime) :
                new ObjectParameter("TrxDateTime", typeof(string));
    
            var trxDocTypeParameter = trxDocType != null ?
                new ObjectParameter("TrxDocType", trxDocType) :
                new ObjectParameter("TrxDocType", typeof(string));
    
            var clientDocParameter = clientDoc != null ?
                new ObjectParameter("ClientDoc", clientDoc) :
                new ObjectParameter("ClientDoc", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var clientAdressParameter = clientAdress != null ?
                new ObjectParameter("ClientAdress", clientAdress) :
                new ObjectParameter("ClientAdress", typeof(string));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_DocumentHeader", stockSystemParameter, idMessageParameter, branchIdParameter, trxIdParameter, trxDateTimeParameter, trxDocTypeParameter, clientDocParameter, clientNameParameter, clientAdressParameter, gUIDParameter);
        }
    }
}
